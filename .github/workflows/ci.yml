name: CI

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash --noprofile --norc -eo pipefail {0}

env:
  FORCE_COLOR: '1'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm
          cache-dependency-path: package-lock.json
      - name: Install dependencies
        run: npm ci --no-audit --no-fund
      - name: Verify AGIALPHA constants
        run: npm run verify:agialpha
      - name: Verify ENS alias configuration
        run: npm run verify:ens
      - name: Detect ungenerated constants
        run: npm run compile && git diff --exit-code contracts/Constants.sol
      - name: Verify module wiring
        env:
          TRUFFLE_NETWORK: mainnet
          MAINNET_RPC_URL: https://cloudflare-eth.com
          MAINNET_PRIVATE_KEY: 0x0000000000000000000000000000000000000000000000000000000000000001
        run: npm run wire:verify
      - name: Run lint
        run: npm run lint
      - name: Run tests
        run: npm test
      - name: Check module governance
        run: npx ts-node --compiler-options '{"module":"commonjs"}' scripts/transfer-ownership.ts --new-owner 0x0000000000000000000000000000000000000000

  slither:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm
          cache-dependency-path: package-lock.json
      - name: Install Node.js dependencies
        run: npm ci --no-audit --no-fund
      - name: Compile contracts
        run: npx hardhat compile --force
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Slither
        run: |
          python -m pip install --upgrade pip
          pip install 'slither-analyzer==0.10.4' 'crytic-compile==0.3.6' 'solc-select==1.1.1'
          solc-select install 0.8.25
          solc-select use 0.8.25
      - name: Run Slither
        run: |
          set -euo pipefail
          mkdir -p slither-report
          set +e
          slither . \
            --solc-remaps @openzeppelin=node_modules/@openzeppelin/ \
            --filter-paths node_modules \
            --compile-force-framework hardhat \
            --hardhat-ignore-compile \
            --json slither-report/slither-report.json \
            --checklist \
            --fail-high
          status=$?
          set -e
          if [ -f slither-checklist.md ]; then
            mv slither-checklist.md slither-report/slither-report.md
          fi
          exit "$status"
      - name: Upload Slither report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: slither-report
          path: slither-report/
          if-no-files-found: error

  echidna:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm
          cache-dependency-path: package-lock.json
      - name: Install dependencies
        run: npm ci --no-audit --no-fund
      - name: Run Echidna fuzzing campaign
        run: npm run echidna

  coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm
          cache-dependency-path: package-lock.json
      - name: Install dependencies
        run: npm ci --no-audit --no-fund
      - name: Run Solidity coverage with threshold gate
        run: npm run coverage:full

  gas-snapshot:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm
          cache-dependency-path: package-lock.json
      - name: Install dependencies
        run: npm ci --no-audit --no-fund
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable
      - name: Run gas snapshot regression check
        run: npm run gas:check
